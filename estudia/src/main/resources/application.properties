#server.port = 8080
#server.servlet.contextPath=/api/v1

# Configuracin Base de Datos
## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/estudia-backend
spring.datasource.username=postgres
spring.datasource.password=e-Studia
## BD Config - Bruno - Comentar y usar el de arriba cualquier cosarriba cualquier cosa
#spring.datasource.url=jdbc:postgresql://localhost:5432/estudia-backend
#spring.datasource.username=postgres
#spring.datasource.password=1234
##
#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=5MB
# Max Request Size
spring.servlet.multipart.max-request-size=50MB

# KEY para JWT
jwt.secretkey = JKHasd1082317098123$

# Formato para el manejo de fechas con hora y minutos
config.datetimeFormat = dd/MM/yyyy HH:mm:ss

# Formato para el manejo de fechas
config.dateFormat = dd/MM/yyyy

# Path para los static files
config.path.static.file = //usr//local//tomcat//webapps//estudia//WEB-INF//classes//static//files//

# Para deploy en Heroku
java.runtime.version=14

# URL base del Frontend
config.certificateURL = https://e-studia.web.app//users/certificate/

# Nivel de log
#logging.level.root=DEBUG
